#!/bin/bash

function fail {
	echo Failure: $1;
	exit 1;
}

function fetch_variable {
	grep -i ^$1 $SPECFILE |awk '{print $2;}'	
}


case x"$1" in
	x--help )
	echo `basename $0` specfile
	exit
	;;
esac;

ARGS=
for parameter in $*; do
if echo $parameter | grep '.spec$' ; then
	SPECFILE=$parameter
	ARGS+=$parameter
else
case "x$parameter" in
	x--skip-rpmlint | x-S )
	SKIPRPMLINT=yes ;;
	x--init | x-I )
	INIT=yes ;;
	x--cleanup | x-C )
	CLEANUP=yes ;;
esac || ARGS+=$parameter;
fi;
done;

if [ "x$INIT" == "xyes" ]; then
	if ! [ -x `which rpmbuild` ]; then
		fail "rpmbuild not found, install rpmbuild"
	fi;
	mkdir -p $HOME/rpmbuild
	mkdir -p $HOME/rpmbuild/RPMS
	mkdir -p $HOME/rpmbuild/SRPMS
	mkdir -p $HOME/rpmbuild/SOURCES
	mkdir -p $HOME/rpmbuild/SPECS
cat > $HOME/.rpmmacros <<EOF
%_topdir $HOME/rpmbuild
%_smp_mflags  -j3
%__arch_install_post   /usr/lib/rpm/check-rpaths   /usr/lib/rpm/check-buildroot
EOF
	find $HOME/rpmbuild -type d
	cat $HOME/.rpmmacros
	exit;
fi;

if [ "x$CLEANUP" == "xyes" ]; then
	rm -f $HOME/.rpmmacros
	rm -rf $HOME/rpmbuild
	exit;
fi;

if [ "x$SPECFILE" == "x" ]; then
	fail "SPECFILE is not specified.";
fi

RPMBUILD=~/rpmbuild

if ! [ -f $SPECFILE ]; then
	fail "$SPECFILE doesnt exist.";
fi;

[ "x$SKIPRPMLINT" != "xyes" ] &&
if rpmlint $SPECFILE | grep "E:" ; then
	fail "$SPECFILE is broken.";
fi;

TMP=`mktemp /tmp/tmpXXXXXX`

version=`fetch_variable Version`
name=`fetch_variable Name`

grep -i -e '^Source.*' -e '^Patch.*' $SPECFILE |
sed -e "s;%{version};$version;" \
    -e "s;%{name};$name;" \
 > $TMP
for file in * ; do
if grep -e $file $TMP > /dev/null; then
	echo $file is a source file, copy to $RPMBUILD/SOURCES
	mkdir -p $RPMBUILD/SOURCES
	cp $file $RPMBUILD/SOURCES
fi;
done;

rm $TMP

rpmbuild $ARGS
